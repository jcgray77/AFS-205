apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose.yml -o ./.k8s
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert -f docker-compose.yml -o ./.k8s
        kompose.version: 1.16.0 (0c01309)
      creationTimestamp: null
      labels:
        io.kompose.network/fsw205-network: "true"
        io.kompose.service: mongo
    spec:
      containers:
      - env:
        - name: MONGODB_DBNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_DBNAME
              name: docker-env-mongo-production-env
        - name: MONGODB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MONGODB_PASSWORD
              name: docker-env-mongo-production-env
        - name: MONGODB_ROLE
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROLE
              name: docker-env-mongo-production-env
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROOT_PASSWORD
              name: docker-env-mongo-production-env
        - name: MONGODB_ROOT_ROLE
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROOT_ROLE
              name: docker-env-mongo-production-env
        - name: MONGODB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROOT_USERNAME
              name: docker-env-mongo-production-env
        - name: MONGODB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_USERNAME
              name: docker-env-mongo-production-env
        image: fsw205/mongo
        imagePullPolicy: ""
        name: mongo
        ports:
        - containerPort: 27017
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
